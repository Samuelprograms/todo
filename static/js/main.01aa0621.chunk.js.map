{"version":3,"sources":["components/Todo.js","components/Todos.js","components/Error.js","App.js","useLocalStorage.js","index.js"],"names":["Todo","task","deleteTodo","editTodo","toggleTodo","index","todosNames","setError","error","useState","showButtons","setShowButtons","edit","setEdit","name","newTodo","setNewTodo","className","onMouseOver","onMouseLeave","onClick","includes","message","state","id","icon","faPencilAlt","isCompleted","style","cursor","faCheckCircle","faTimesCircle","disabled","value","onChange","e","target","faBackspace","Todos","todos","search","setSearch","type","placeholder","length","filter","toLowerCase","map","Error","faTimes","faCheck","App","key","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","setItem","stringify","console","useLocalStorage","setTodos","setTodosNames","todo","setTodo","useEffect","preventDefault","addId","uuid","trim","addTodo","marginLeft","faPlus","oldTodos","log","newTodos","newValue","clearCompleteToDo","faBroom","faTrash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01aa0621.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./../css/Todo.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBackspace, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Todo = ({\r\n  task,\r\n  deleteTodo,\r\n  editTodo,\r\n  toggleTodo,\r\n  index,\r\n  todosNames,\r\n  setError,\r\n  error,\r\n}) => {\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [edit, setEdit] = useState(true);\r\n  const [newTodo, setNewTodo] = useState(task.name);\r\n\r\n  const existTaskEdited = () => {\r\n    setNewTodo(task.name);\r\n    if (edit === false) {\r\n      if (task.name === newTodo) {\r\n        setEdit(true);\r\n      } else if (todosNames.includes(newTodo)) {\r\n        setError({ ...error, message: \"the ToDo already exist\", state: true });\r\n        setEdit(false);\r\n      } else {\r\n        setError({\r\n          ...error,\r\n          message: \"the ToDo edited successfully\",\r\n          state: false,\r\n        });\r\n        setEdit(true);\r\n        editTodo(task.id, newTodo);\r\n        setNewTodo(newTodo);\r\n      }\r\n    } else {\r\n      setEdit(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"todo\"\r\n      key={task.id}\r\n      onMouseOver={() => setShowButtons(true)}\r\n      onMouseLeave={() => setShowButtons(false)}\r\n    >\r\n      {showButtons && (\r\n        <button onClick={() => existTaskEdited()}>\r\n          <FontAwesomeIcon icon={faPencilAlt} />\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"todo__inputs\">\r\n        {task.isCompleted ? (\r\n          <FontAwesomeIcon\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleTodo(index)}\r\n            icon={faCheckCircle}\r\n          />\r\n        ) : (\r\n          <FontAwesomeIcon\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleTodo(index)}\r\n            icon={faTimesCircle}\r\n          />\r\n        )}\r\n        <input\r\n          className=\"input__task\"\r\n          disabled={edit}\r\n          value={newTodo}\r\n          onChange={(e) => setNewTodo(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      {showButtons && (\r\n        <button onClick={() => deleteTodo(task.id)}>\r\n          <FontAwesomeIcon icon={faBackspace} />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport \"./../css/Todos.css\";\r\n\r\nconst Todos = ({\r\n  todos,\r\n  search,\r\n  setSearch,\r\n  toggleTodo,\r\n  deleteTodo,\r\n  editTodo,\r\n  todosNames,\r\n  setError,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"todos\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Task\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      {todos.length !== 0 ? (\r\n        todos\r\n          .filter((task) =>\r\n            search\r\n              ? task.name.toLowerCase().includes(search.toLowerCase())\r\n              : task\r\n          )\r\n          .map((task, index) => (\r\n            <Todo\r\n              key={index}\r\n              task={task}\r\n              index={index}\r\n              deleteTodo={deleteTodo}\r\n              editTodo={editTodo}\r\n              todosNames={todosNames}\r\n              toggleTodo={toggleTodo}\r\n              setError={setError}\r\n              error={error}\r\n            />\r\n          ))\r\n      ) : (\r\n        <h1>There's not ToDos</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./../css/Error.css\";\r\n\r\nconst Error = ({ error, setError }) => {\r\n  return (\r\n    <div className={`error ${error.state ? \"error__error\" : \"error__success\"}`}>\r\n      {error.message}\r\n      <button onClick={() => setError({ ...error, state: null })}>\r\n          {error.state ? \r\n        <FontAwesomeIcon icon={faTimes} />:\r\n        <FontAwesomeIcon icon={faCheck} />\r\n          }\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Error from \"./components/Error\";\nimport { v4 as uuid } from \"uuid\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBroom, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./css/App.css\";\nconst App = () => {\n  const [todos, setTodos] = useLocalStorage(\"toDo\", []);\n  const [todosNames, setTodosNames] = useState(\n    todos.map((task) => task.name.toLowerCase())\n  );\n  const [todo, setTodo] = useState({ name: \"\", isCompleted: false });\n  const [error, setError] = useState({ message: null, state: null });\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    setTodosNames(todos.map((task) => task.name.toLowerCase()));\n  }, [todos]);\n\n  const addTodo = (e) => {\n    e.preventDefault();\n    const addId = { id: uuid() };\n    if (todo.name.trim().length === 0) {\n      setError({ ...error, message: \"Please fill the input\", state: true });\n    } else if (todosNames.includes(todo.name.toLowerCase())) {\n      setError({ ...error, message: \"The ToDo already exist\", state: true });\n    } else {\n      setError({ ...error, message: \"ToDo added\", state: false });\n      const newTodo = { ...todo, ...addId };\n      setTodo(newTodo);\n      setTodos([...todos, newTodo]);\n      setTodo({ ...todo, name: \"\" });\n    }\n  };\n\n  const deleteTodo = (id) => {\n    const oldTodos = [...todos];\n    const newTodos = oldTodos.filter((task) => task.id !== id);\n    setTodos(newTodos);\n  };\n\n  const editTodo = (id, newValue) => {\n    const oldTodos = [...todos];\n    const newTodos = oldTodos.filter((task) => {\n      if (task.id === id) {\n        task.name = newValue;\n      }\n      return task;\n    });\n    setTodos(newTodos);\n    console.log(todos);\n  };\n\n  const clearCompleteToDo = () => {\n    const oldTodos = [...todos];\n    const newTodos = oldTodos.filter((task) => task.isCompleted !== true);\n    setTodos(newTodos);\n  };\n\n  const toggleTodo = (id) => {\n    const oldTodos = [...todos];\n    if (oldTodos[id].isCompleted) {\n      console.log(\"unchecked\");\n    } else {\n      console.log(\"checked\");\n    }\n    oldTodos[id].isCompleted = !oldTodos[id].isCompleted;\n    setTodos(oldTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      {error.state !== null && <Error error={error} setError={setError} />}\n      <input\n        type=\"text\"\n        placeholder=\"Task\"\n        value={todo.name}\n        onChange={(e) => setTodo({ ...todo, name: e.target.value })}\n      />\n      <button onClick={(e) => addTodo(e)}>\n        Add Todo\n        <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faPlus} />\n      </button>\n      <Todos\n        todos={todos}\n        search={search}\n        setSearch={setSearch}\n        toggleTodo={toggleTodo}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        todosNames={todosNames}\n        setError={setError}\n        error={error}\n      />\n      <div className=\"app__buttons\">\n        <button onClick={() => clearCompleteToDo()}>\n          Clear Completed{\" \"}\n          <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faBroom} />\n        </button>\n        <button onClick={() => setTodos([])}>\n          Delete All{\" \"}\n          <FontAwesomeIcon style={{ marginLeft: \"10px\" }} icon={faTrash} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\r\nexport const useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n  const setValue = (value) => {\r\n    try {\r\n      setStoredValue(value);\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}